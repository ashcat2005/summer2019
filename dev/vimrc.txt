"============ INITIAL SETUP ==================
    set nocompatible            "Don't make vim Vi-compatible
    set encoding=utf8           "Use UTF-8 Character Encoding
    set noerrorbells            "Silence vim errorbells
    set visualbell t_vb=        "Enable visual bell instead
        
    " Have Vim jump to the last position when reopening a file
    if has("autocmd")
      au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") |
                  \ exe "normal! g'\"" | endif
    endif

    set confirm                 "Prompt if unsaved changes in buffer

"============ COLOR SCHEME ===================
    colorscheme dracula 
    "let g:molokai_original=1
    "set t_ut=
    
"========= SYNTAX HIGHLIGHTING ==============
    syntax enable

"========== TABS AND SPACES =================
    set tabstop=4               "Tab length used by vim to read <TAB> on file open
    set softtabstop=4           "Tab length used to insert <TAB> while editing
    set expandtab               "Expand tabs to spaces
    set shiftwidth=4            "Indentation level length (when using << >>)
    set smarttab                "If set, use shiftwidth instead of [soft]tabstop

"============ INDENTATION ===================
    set autoindent              "Follow indentation of previous line
    set smartindent             "Indent according to syntax/style (needs autoindent)

"============ SEARCHING =====================
    set hlsearch                "Highlight searches
    set incsearch               "Incremental search: Search while typing
    set ignorecase              "Ignore case while searching
    
"=============PLUGINS========================    
    execute pathogen#infect()

"============UI CONFIG=====================
    set mouse=a                 "Set mouse mode for all [previous] modes
    set number                  "Show line numbers
    set ruler                   "Show row & column position of cursor
    set cursorline              "Horizontal highlight under line where cursor is
    filetype plugin indent on   "load filetype-specific indents from .vim/indent
                                "Also load filetype specific plugins
    set wildmenu                "Show graphical menu of potential autocompletes
    set showmatch               "Highlight matching parentheses
"    set colorcolumn=85          "Set vertical line marker at 80 characters
"    highlight ColorColumn ctermbg=4
    set splitright              "On splitting new window, split to the right

"=============FINDING FILES================
    " Comment out if using CtrlP/Nerdtree
    " += adds on the original value
    " ** allows for recursive searches through directories
    set path+=**                "Add recursive search to path

    " Now you can use :find with tab autocomplete to look for files

    " Create tags file with ctags
    command! MakeTags !ctags -R $PWD 

"    set autochdir               "Chnage vim's working directory to file's location
"==========FOLDING=========================
    set foldenable              "|zi| Keep folds when vim opens file
    set foldmethod=indent       "vim folds lines grouped by indents
    "set foldignore=            "Ignore folding for these characters
    set foldminlines=1          "Min # of lines to create a fold on file open
    set foldlevelstart=10       "Opens all folds with fold size <=10
    set foldnestmax=10          "Can't have have nested folds >= 10 levels
    set foldlevel=10

"===========EDITING========================
    set pastetoggle=<C-v>		"Use shortcut to toggle paste mode on/off

	"Persistent undo (Undos saved across vim writes)
	try
		set undofile            "Create a file to store undos in
		set undodir=~/.vim/undo "Location of undofile's directory
        set undolevels=1000     "The number of undos
        set undoreload=10000    "Number of lines to save for undo
	catch
    endtry

    "Highlight TODO
    augroup HiglightTODO
        autocmd!
        autocmd WinEnter,VimEnter * :silent! call matchadd('Todo', 'TODO', -1)
    augroup END

"===========BACKUP=========================
	set backup
	set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
	set backupskip=/tmp/*,/private/tmp/*
	set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
	set writebackup
